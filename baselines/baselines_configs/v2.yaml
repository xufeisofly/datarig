# V2
- source: cc
  steps:
    - func: bad_words_modifier
      banned_filepath: "baselines/mappers/banlists/zh-badwords.txt"
      banned_language: "zh"
      remove_word: True
      redis_record_key: "zh_bad_words_doc_count"
    - func: bad_words_modifier
      banned_filepath: "baselines/mappers/banlists/en-badwords.txt"
      remove_word: False
      redis_record_key: "en_bad_words_doc_count_before"
    - func: bad_words_modifier
      banned_filepath: "baselines/mappers/banlists/en-soft_banned_words.txt"
      remove_word: False
      redis_record_key: "en_soft_bad_words_doc_count_before"
    - func: url_removal_modifier
    - func: email_and_phone_removal_modifier
    - func: citation_removal_modifier
    - func: substring_line_modifier        
      max_length: 10 
      banlist: "items in cart"
      remove_substring_only: True
    - func: substring_line_modifier
      max_length: 10
      banlist: "Read more..."
      location: suffix
      remove_substring_only: True
    - func: substring_line_modifier
      max_length: 10
      banlist: "Read more"
      location: suffix
      remove_substring_only: True
    - func: substring_line_modifier
      max_length: 10
      banlist: "Sign-in"
      location: prefix
      remove_substring_only: True
    - func: line_removal_modifier
    - func: word_length_modifier
    - func: lorem_ipsum_filter
    - func: min_sentences_filter
    - func: cache_split_words_modifier
    - func: fineweb_gopher_quality_filter
      model: v2
    - func: fineweb_quality_filter
    - func: massive_web_repetition_filters
      tokenizer: "fineweb"
    - func: uncache_split_words_modifier
    - func: bad_words_modifier
      banned_filepath: "baselines/mappers/banlists/en-badwords.txt"
      remove_word: False
      redis_record_key: "en_bad_words_doc_count_after"
    - func: bad_words_modifier
      banned_filepath: "baselines/mappers/banlists/en-soft_banned_words.txt"
      remove_word: False
      redis_record_key: "en_soft_bad_words_doc_count_after"